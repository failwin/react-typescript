---
extends: [
  "airbnb",
  "plugin:import/errors",
  "plugin:jsx-a11y/recommended",
  "plugin:flowtype/recommended"
]
plugins: ["react", "import", "jsx", "jsdoc", "flowtype"]
env:
  node: true
  browser: true
  es6: true
  mocha: true
parser: "babel-eslint"
parserOptions:
  sourceType: module
  ecmaVersion: 7
  ecmaFeatures:
    classes: true
    jsx: true
rules:
  linebreak-style: 0
  indent: ["error", 4, {"SwitchCase": 1}]
  max-len: ["error", { "code": 100 }]
  comma-dangle: ["error", {
    arrays: "never",
    objects: "always-multiline",
    imports: "always-multiline",
    exports: "always-multiline",
    functions: "never"
  }]
  no-console: "error"
  no-unused-vars: ["error", {"vars": "local"}]
  no-param-reassign: ["error", { "props": false }]
  react/jsx-indent: ["error", 4]
  react/jsx-indent-props: ["error", 4]
  react/jsx-no-undef: "warn"
  react/jsx-sort-props: 0
  react/sort-prop-types: 0
  react/no-did-mount-set-state: "warn"
  react/no-did-update-set-state: "warn"
  react/no-multi-comp: "warn"
  react/no-unknown-property: "warn"
  react/prop-types: "warn"
  react/require-default-props: "warn"
  react/sort-comp: ["error", {
    order: [
      "instance-variables",
      "type-annotations",
      "instance-variables",
      "type-annotations",
      "static-properties",
      "static-methods",
      "lifecycle",
      "everything-else",
      "instance-methods",
      "rendering"
    ],
    groups: {
      rendering: [
        "/^render.+$/",
        "render"
      ]
    }
  }]
  import/no-unresolved: 0
  import/no-extraneous-dependencies: 0
  import/extensions: ["error", {
    js: "never",
    mjs: "never",
    jsx: "never"
  }]
  require-jsdoc: "warn"
  valid-jsdoc: "error"
  jsdoc/check-param-names: "error"
  jsdoc/check-tag-names: "error"
  jsdoc/check-types: "error"
  jsdoc/newline-after-description: "error"
  jsdoc/require-hyphen-before-param-description: "error"
  jsdoc/require-param: "error"
  jsdoc/require-param-description: "error"
  jsdoc/require-param-type: "error"
  jsdoc/require-returns-type: "error"
globals:
  expect: true
  sinon: true
  Promise: true
